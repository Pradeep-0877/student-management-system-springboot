name: build
on: workflow_dispatch
jobs: 
  build:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Pradeep-0877_student-management-system-springboot -DskipTests -Dsonar.qualitygate.wait=true
      - name: archiving the artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: "sms-app"
          path: target/*.jar
  
  Upload_to_release: 
      needs: build
      runs-on: ubuntu-latest
      steps: 
        - name: Downloading artifacts
          uses: actions/download-artifact@v3
          with: 
            name: sms-app
        - run: |
            ls
            pwd
        - name: Archive Release
          uses: thedoctor0/zip-release@0.7.5
          with:
              type: 'zip'
              filename: 'app.zip'
        - run: |
            ls
            # unzip "app.zip"
            ls
            pwd
        # - name: creating release...
        #   id: create_release
        #   uses: actions/create-release@v1
        #   env: 
        #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        #   with: 
        #     tag_name: v${{github.run_number}}
        #     release_name: Release ${{github.run_number}}
        # - name: Upload Release Asset
        #   id: upload-release-asset 
        #   uses: actions/upload-release-asset@v1
        #   env:
        #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        #         asset_path: ./app.zip
        #         asset_name: app-${{github.run_number}}.zip
        #         asset_content_type: application/zip
